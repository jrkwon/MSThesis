/*
 *
 *  기획      :  한국어 생성기
 *  파일 이름 :  kg-ftr.h
 *  함수(들)  :
 *  파일 설명 :  속성구조에 쓰일 상수와 변수들을 정의하거나 선언한다.
 *  만든 날   :  1993. 09. 10 ~ 10. 01
 *  만든 이   :  권 재 락
 *
 *  저작권 (C) 1993 한양대학교 전자통신공학과 대학원 인공지능연구실
 *  이 프로그램에 대한 모든 권리는 저작권자가 가집니다.
 *
 *
 *  [+] 헝가리식 표기법
 *  -----------------------------------------------------
 *   접두어     뜻
 *  -----------------------------------------------------
 *   c          char
 *   by         unsigned char (BYTE)
 *   n          short int or int
 *   x          short int (그래픽 좌표 x좌표)
 *   y          short int (그래픽 좌표 y좌표)
 *   i          int
 *   b          int (BOOL)
 *   w          unsigned int (WORD)
 *   h          unsigned int (WORD) (HANDLE)
 *   dw         unsigned long int (DWORD)
 *   fn         Function (함수 포인터)
 *   s          Character Array (NULL로 끝날 필요 없다)
 *   sz         Character String (NULL로 끝난다)
 *  -----------------------------------------------------
 *
 */

#ifndef _KG_FTR_H_
#define _KG_FTR_H_

/*
 *  ♥ 속성을 1부터 정의한 이유는, 속성 0은 마디 구조 내에
 *     그 마디가 비어 있다는 표시로 쓰기 위해서이다.
 */

/*
 *  품사
 */

#define NOUNP       1               /* 명사, 명사구                      */
#define PRONP       2               /* 대명사, 대명사구                  */
#define NMRLP       3               /* 수사, 수사구                      */
#define POSTP       4               /* 조사                              */
#define VERBP       5               /* 동사, 동사구                      */
#define ADJCP       6               /* 형용사, 형용사구                  */
#define AUXLP       7               /* 보조 용언, 보조 용언 구           */
#define ADVBP       8               /* 부사, 부사구                      */
#define PRENP       9               /* 관형사, 관형사구                  */
#define EXCLP      10               /* 감탄사, 감탄사구                  */
#define EOWRD      11               /* 어미                              */

/*
 *  속성 구조에서 사용하는 속성과 속성값
 *
 *  ※ 이중에서 속성값은 실제처리에서는 문자열 처리를 하고 있어서
 *     상수 정의가 필요없지만, 자료 정리를 위해 정의해 둔다
 */

/* ================================ ROOT =============================== */
#define POS         1               /* 음소의 배열                       */
#define CAT         2               /* 품사                              */
#define HEAD        3               /* 문자의 통사, 의미 정보            */
#define VAL         4               /* 머리 구조 자신에 대한 정보        */
#define SUBCAT      5               /* 딸 1과 딸 2의 속성구조 포인터     */

/* ================================ HEAD =============================== */
#define SYN        10               /* 통사 정보 속성                    */

/* ============================= HEAD - SYN ============================ */
/* *************************** 어말 어미 정보 ************************** */
#define EWFORM     11               /* 용언의 어미 형태                  */
/* ======================== HEAD - SYN - EWFORM ======================== */
/* ----------------------------- 법 (MOOD) ----------------------------- */
#define DECLM      12               /* 평서법                            */
#define IRROM      13               /* 의문법                            */
#define EXCLM      14               /* 감탄법                            */
#define IMPRM      15               /* 명령법                            */
#define ALLWM      16               /* 허락법                            */
#define PRMSM      17               /* 약속법                            */
#define SGSTM      18               /* 청유법                            */
/* ------------------------------- 전성 -------------------------------- */
#define PRENPR     20               /* 관형사형 전성어미-는(현재)        */
#define PRENPA     21               /* 관형사형 전성어미-ㄴ(과거)        */
#define PRENFU     22               /* 관형사형 전성어미-ㄹ(미래)        */
#define COPULZ     23               /* 지정사 전성 (-이다; 명사 ☞ 동사) */
/* #define NOUNZ      24            */   /* 명사 전성 (동사+(으)ㅁ/기)        */
/* ------------------------- 접속형 (등위, 종속) ----------------------- */
#define SMPLAR     30               /* 단순 나열 (-고)                   */
#define ORDRAR     31               /* 순차 나열 (-고(서))               */
#define RSLTAR     32               /* 결과 나열 (-(어)서)               */
#define SMLTAR     33               /* 동시 나열 (-(으)며/-(으)면서)     */
#define IMMDET     34               /* 이어서 생김 (-자(마자))           */
#define REASON     35               /* 이유(-(으)니까,-(어)서 ...)       */
#define CAUSEA     36               /* 원인(-(느라(고)                   */
#define CAUSEN     37               /* 원인방임 (거니와)                 */
#define INTROD     38               /* 도입 (건대)                       */
#define CONCSA     39               /* 양보 (-어도,-든(지))              */
#define CONCSN     40               /* 양보 방임 (-어도,-으나,-지만..)   */
#define ACKNWL     41               /* 인정 (-거니)                      */
#define GUSACK     42               /* 추측 인정 (-려니)                 */
#define GUSNON     43               /* 추측 방임 (-(으)려니와)           */
#define IFEXPL     44               /* 가정 설명 (-(으)면)               */
#define IFRSTR     45               /* 가정 구속 (-거든)                 */
#define IFCPST     46               /* 가정 양보 과거 (-던들)            */
#define IFCPRS     47               /* 가정 양보 현재 (-(으)ㄴ들)        */
#define IFNONI     48               /* 가정 양보 방임 (-더라도 ... )     */
#define RESULT     49               /* 결과 (-도록,-게(끔), ... )        */
#define OPPOST     50               /* 대립 (-나마)                      */
#define INTENS     51               /* 의도 (-(으)려(고),-고자)          */
#define COURSE     52               /* 경과 설명 (-는데)                 */
#define DBTPST     53               /* 의심 과거 (-(으)ㄴ지)             */
#define DBTPRS     54               /* 의심 현재 (-는지)                 */
#define DBTRCL     55               /* 의심 회상 (-던지)                 */
#define DBTGUS     56               /* 의심 추측 (-(으)ㄹ지)             */
#define STOPPT     57               /* 중단 (-다가)                      */
#define THSAME     58               /* 그 같음 (-다시피, -듯이)          */
#define NNINTF     59               /* 방임 (-(으)ㄹ망정)                */
#define ADDDTO     60               /* 더함 (-(으)ㄹ뿐더러)              */
#define DEEPER     61               /* 심해짐 (-(으)ㄹ수록)              */
#define PURPSE     62               /* 목적 (-(으)러)                    */
#define NEEDTO     63               /* 필요 (-어야(만))                  */
/* ------------------------------ 보조연결 ----------------------------- */
#define AUXLAA     70               /* 일반 서술 (-아/-어)               */
#define AUXLGE     71               /* 상태 서술 (-게)                   */
#define AUXLJI     72               /* 부정 서술 (-지)                   */
#define AUXLGO     73               /* 진행 서술 (-고)                   */

#define GENCON     74               /* 일반접속 (명사형 전성어미 분리 후)*/
                                   /* 남은 용언의 활용형을 정의         */

/* ============================ HEAD - SYN ============================= */
#define OHONOR     80               /* 상대 높임                         */
/* ======================== HEAD - SYN - OHONOR ======================== */
#define LOWER1     81               /* 낮춤말 (해라)      : 아주 낮춤    */
#define LOWER2     82               /* 낮춤말 (해)        : 두루 낮춤    */
#define LOWER3     83               /* 낮춤말 (하게)      : 예사 낮춤    */
#define HIGHR1     84               /* 높임말 (하오)      : 예사 높임    */
#define HIGHR2     85               /* 높임말 (해요)      : 두루 높임    */
#define HIGHR3     86               /* 높임말 (합니다)    : 아주 높임    */

/* ************************** 선어말 어미 정보 ************************* */
/* ============================ HEAD - SYN ============================= */
#define TENSE      90               /* 시제                              */
/* ======================== HEAD - SYN - TENSE ========================= */
#define PRESNT     91               /* 현재 (현실법)                     */
#define RECOLL     92               /* (회상법 -더-)                     */
#define FUTURE     93               /* 미래 (미정법 -겠-)                */
#define PAST       94               /* 과거 (완결법 -었-)                */
#define PPAST      95               /* 과 - 과거 (완결완결법 -었었-)     */
#define FUTUREC    96               /* (추정회상법 -겠더-)               */
#define PASTREC    97               /* (완결회상법 -었더-)               */
#define PASTFUT    98               /* (완결추정법 -었겠-)               */
#define PASTFUTR   99               /* (완결추정회상법 -었겠더-)         */

/* ==============+============= HEAD - SYN ============================= */
#define GUESS     100               /* { +, - } 추측                     */
#define INTEN     101               /* { +, - } 의도                     */
#define SHONOR    102               /* { +, - } 주체 존대                */

/* *************************** 보조 용언 정보 ************************** */
/* ============================ HEAD - SYN ============================= */
#define PRGRSS    110               /* { +, - } 진행 (-고 있다)          */
#define STATE     111               /* { +, - } 상태 (-어 있다)          */
#define DONOT     112               /* { +, - } 부정1 (-지 않다)         */
#define FORBID    113               /* { +, - } 부정2 (-지 말다)         */
#define CANNOT    114               /* { +, - } 부정3 (-지 못하다)       */
#define PASSIV    115               /* { +, - } 피동 (-어 지다)          */
#define BECOME    116               /* { +, - } 변동 (-게 되다)          */
#define SERVCE    117               /* { +, - } 봉사 (-어 주다)          */
#define TRIAL     118               /* { +, - } 시행 (-어 보다)          */
#define STRESS    119               /* { +, - } 강조 (-어 대다)          */
#define PSSESS    120               /* { +, - } 보유 (-어 두다, 놓다)    */
#define CAUSAT    121               /* { +, - } 사동 (-게 하다/만들다)   */
#define DESIRE    122               /* { +, - } 희망 (-고 싶다)          */
#define SHOULD    123               /* { +, - } 당위 (-어야 하다)        */
#define APPROV    124               /* { +, - } 시인 (-기는 하다)        */
/* 과기(죽을 번하다), 추측(좋은가 보다) */

/* ******************************* 상(ASPECT) ************************** */
/* #define COMPLT   130       */        /* { +, - } 완료 (-어 내다/버리다)   */
/* #define COMPLT   131       */        /* { +, - } 예정 (-ㄹ 것이다)        */
/* #define COMPLT   132       */        /* { +, - } 결과 (-어 내다/버리다)   */
/* --> 의존명사는 마치 보조용언화한 것으로 생각하면 어떨까?? */

/* ****************************** 의존명사 **************************** */
/* #define ASSMPT   140       */        /* { +, - } 추정 (-ㄴ/는/ㄹ듯하다)   */
/* #define HYPOCR   141       */        /* { +, - } 가식 (-ㄴ/는 체,척하다)  */
/* #define WORTH    142       */        /* { +, - } 가치 (-ㄹ/ㅁ 만,직하다)  */
/* #define POSSIB   143       */        /* { +, - } 가능 (-ㄹ 수 있다)       */
/* --> 의존 명사 부분을 추가 한다면 그 수가 꽤 많을 것이다               */
/* ============================= HEAD - SYN ============================ */
#define ADJNAT    200               /* { +, - } 형용사성 (동사 ☞ 형용사)*/
#define COPULA    201               /* { +, - } 지정사성 (명사 ☞ 동사)  */
#define PLURAL    202               /* { +, - } 복수(+), 단수(-)         */

/* ============================= HEAD - SYN ============================ */
#define IRRGLA    210               /* 용언 불규칙                       */
/* ========================= HEAD - SYN - IRRGLA ======================= */
#define REGULA    211               /* 규칙용언; 필요없지 않나 ?         */
#define UEFALL    212               /* 으 탈락                           */
#define RFALL     213               /* ㄹ 탈락                           */
#define UEINST    214               /* 으 삽입                           */
#define SIRGL     215               /* ㅅ 불규칙                         */
#define DIRGL     216               /* ㄷ 불규칙                         */
#define BIRGL     217               /* ㅂ 불규칙                         */
#define RUEIRGL   218               /* 르 불규칙                         */
#define UEIRGL    219               /* 으 불규칙                         */
#define YEOIRGL   220               /* 여 불규칙                         */
#define GEOIRGL   221               /* 거라 불규칙                       */
#define NEOIRGL   222               /* 너라 불규칙                       */
#define REOIRGL   223               /* 러 불규칙                         */
#define HIRGL     224               /* ㅎ 불규칙                         */

/* ============================= HEAD - SYN ============================ */
#define NNFORM    230               /* 명사형                            */
/* ========================== HEAD - SYN - NNFORM ====================== */
#define NORMLN    231               /* 보통명사                          */
#define PRPRNN    232               /* 고유명사 - 사람이름               */
#define PRPRNP    233               /* 고유명사 - 땅 이름                */
#define PRPRNT    234               /* 고유명사 - 나라 이름              */
#define PRPRNB    235               /* 고유명사 - 책 이름                */
#define PRPRNA    236               /* 고유명사 - 사건 이름              */
#define PRPRNE    237               /* 고유명사 - 기타 이름              */
#define DEPNDN    238               /* 의존명사                          */
#define NOUNZ     239               /* 명사 전성형                       */
/* --> 전성명사는 따로 구분하지 않고, 명사전성형을 명사로 취급한다
       -음,ㅁ,기 가 붙은 것은 품사는 명사로 만들고, 명사형에 전성형임을
       표시한다                                                          */
/* ============================= HEAD - SYN ============================ */
#define PRFORM    250               /* 대명사형                          */
/* ========================== HEAD - SYN - PRSNPR ====================== */
#define PRSNPR    251               /* 인칭 대명사                       */
#define DIRMAT    252               /* 사물 지시 대명사                  */
#define DIRLOC    253               /* 장소 지시 대명사                  */

/* ============================= HEAD - SYN ============================ */
#define NBFORM    260               /* 수사 종류                         */
/* ========================== HEAD - SYN - NBFORM ====================== */
#define NUMBER    261               /* 숫자                              */
#define CARDNL    262               /* 기수사                            */
#define ORDNL     263               /* 서수사                            */

/* ============================= HEAD - SYN ============================ */
#define PPFORM    270               /* 조사 종류                         */
/* ========================== HEAD - SYN - PPFORM ====================== */
/* ****************************** 격조사 ******************************* */
#define SUBJ      271               /* 주격                              */
#define SUBJ2     272               /* 주격 2                            */
#define OBJ       273               /* 목적격                            */
#define OBJ2      274               /* 목적격 2                          */
#define VOC       275               /* 호격                              */
#define PREN      276               /* 관형격                            */
/* --> 부사격은 아래에서 따로 취급한다                                   */
/* ****************************** 보조사 ******************************* */
#define TOPIC     280               /* 은/는                             */
#define INDEP     281               /* 만/뿐                             */
#define NONSEL    282               /* (이)든지, (이)라도                */
#define NONSPC    283               /* (이)ㄴ들                          */
#define FROM      284               /* 부터                              */
#define SELECT    285               /* (이)나,든지                       */
#define SPCL      286               /* (이)야(말로)                      */
#define OFCAUSE   287               /* 은/는커녕                         */
#define NOMORE    288               /* 밖에                              */
#define INDICT    289               /* (으)ㄹ랑(은)                      */
#define EXPAND    290               /* (이)나                            */
#define DISSAT    291               /* (이)나마                          */
#define EMPH      292               /* (이)나                            */
#define EACH      293               /* 씩                                */
#define SURE      294               /* 곧                                */
#define UNIFORM   295               /* 마다                              */
#define TO        296               /* 까지                              */
#define TOO       297               /* 도                                */
#define FOLLOW    298               /* 조차,마저                         */
#define TOGETHR   299               /* 서껀                              */
/* ******************************* 부사격 ****************************** */
#define SPLOC     310               /* 장소 ; 에,에서                    */
#define TMLOC     311               /* 시간 ; 에                         */
#define STLOC     312               /* 행위귀착 ; 에,에게,한테,께,...    */
#define SRC       313               /* 출발점 ; 에게,에게서,한테서...    */
#define GOAL      314               /* 지향점 ; (으)로,에게로,한테로...  */
#define TOOL      315               /* 도구 ; (으)로(써)                 */
#define QUAL      316               /* 자격 ; (으)로(서)                 */
#define CHANGE    317               /* 바뀜 ; (으)로                     */
#define CMPSMP    318               /* 단순비교 ; 과,와                  */
#define CMPEQL    319               /* 동등비교 ; 만큼                   */
#define CMPSAM    320               /* 그 같음 ; 처럼                    */
#define CMPTHN    321               /* 상대비교 ; 보다                   */
#define QUADIR    322               /* 직접인용 ; -라고                  */
#define QUAIND    323               /* 간접인용 ; -고                    */
#define CAUSE     324               /* 원인 ; -에,-(으)로                */
/* ============================= HEAD - SYN ============================ */
#define VBFORM    330               /* 동사 종류                         */
/* ========================== HEAD - SYN - VBFORM ====================== */
#define TVERB     331               /* 타동사                            */
#define ITVERB    332               /* 자동사                            */
#define AUXVERB   333               /* 보조동사                          */

/* ============================= HEAD - SYN ============================ */
#define AJFORM    340               /* 형용사 종류                       */
/* ========================== HEAD - SYN - AJFORM ====================== */
#define NATADJ    341               /* 성상 형용사                       */
#define DIRADJ    342               /* 지시 형용사                       */
#define AUXADJ    343               /* 보조 형용사                       */

/* ============================= HEAD - SYN ============================ */
#define PNFORM    350               /* 관형사 종류                       */
/* ========================== HEAD - SYN - PNFORM ====================== */
#define NATPRE    351               /* 성상 관형사                       */
#define DIRPRE    352               /* 지시 관형사                       */
#define NUMPRE    353               /* 수량 관형사                       */

/* ============================= HEAD - SYN ============================ */
#define AVFORM    360               /* 부사 종류                         */
/* ========================== HEAD - SYN - AVFORM ====================== */
#define NATADV    361               /* 성상 부사                         */
#define DIRADV    362               /* 지시 부사                         */
#define NOTADV    363               /* 부정 부사                         */
#define STTADV    364               /* 상태 부사                         */
#define CNJADV    365               /* 접속 부사                         */

/* ============================= HEAD - SYN ============================ */
#define ECFORM    370               /* 감탄사 종류                       */
/* ========================== HEAD - SYN - ECFORM ====================== */
#define EMOECL    371               /* 감정 감탄사(하하,아이고,후유..)   */
#define WILECL    372               /* 의지 감탄사(예,응,그래,아니..)    */
#define ETCADV    373               /* 입버릇, 더듬거림(머,말이지,저...) */

/* ================================ HEAD =============================== */
#define SEM       380               /* 의미 정보 속성                    */
/* ============================= HEAD - SEM ============================ */
#define PRED      381               /* 용언의 개념값                     */
/* 격정보에 대한 속성은 HEAD - SYN - PPFORM을 공유한다                   */
#define REF       382               /* 체언의 개념값                     */
#define PRENEW    383               /* 관형형 어미                       */
#define ADVEW     384               /* 부사형 어미                       */
#define VMODI     385               /* 용언 수식                         */
#define NMODI     386               /* 체언 수식                         */

/* ================================ VAL ================================ */
#define SELF      390               /* 용언 유형, 명사의 의미소성 등     */

/* ============================== SUBCAT =============================== */
#define HEADD     400               /* 머리딸(HEAD DAUGHTER)의 속성포인터*/
/* --> 머리딸이 아닌 것은 그때 그때 다르다.                              */

/* ================================= 기타 ============================== */
#define SOA       410               /* the State Of Affairs : 상황       */
                                    /* 어절을 분리하는 경우 분리한 절 쪽 */
                                    /* 할당하는 속성                     */
#define OTHERS    411               /* 표(Table)에서 특정한 속성이외라는 */
                                    /* 뜻으로 사용                       */

/*
 *  어절을 왜 분리해야 하는 경우가 생기는가?
 *
 *  어절단위의 형태소 해석기가 가지는 결점을 보완하고
 *  형태소 단위의 해석기가 가지는 장점을 취하기 위해서이다.
 *
 *  어절단위의 해석기는 다음과 같은 경우에 해석에 어려움이 있다.
 *
 *  >> 나는 그가 학생임을 몰랐어요.
 *  -------------------------------
 *
 *  위의 문장에서 '학생이다'의 주어는 '그'이다. 하지만
 *  어절단위로 형태소 해석을 한다면, '학생이다'가 명사형으로 바뀌고
 *  여기에 다시 목적격 조사 '을'이 붙어있기 때문에
 *  '학생이다'의 주어가 되는 '그가'와는 결합할 수 없게 된다
 *
 *  나는 그가   학생임을 몰랐어요
 *       ----   --------
 *       명사구 명사구
 *         |       |
 *         +-- x --+
 *
 *  따라서
 *
 *  '학생임을'  --> '학생이 + ㅁ을'
 *
 *  로 분리함으로써
 *
 *  나는 그가   학생이 ㅁ을 몰랐어요
 *       ----   ------
 *       명사구 동사구
 *         |       |
 *         +-- o --+
 *
 *  '그가 학생이'와 'ㅁ을'을 결합하면서
 *  새로운 속성구조를 만들 때, '그가 학생이'쪽에 STATE라는 속성을 할당하고
 *  'ㅁ을'쪽에 OBJ - REF 속성을 준다.
 *
 *  무슨 말인지 알겠지??
 */

extern char *pszCategory[];             /* 품사 문자열 포인터 배열      */
extern char *pszFeature[];              /* 속성 문자열 포인터 배열      */
extern char *pszRelation[];             /* 관계 문자열 포인터 배열      */
 
char *Feature2Str(/* nFeature */);

#endif

/* ------------------------------------------------------------------------- */
